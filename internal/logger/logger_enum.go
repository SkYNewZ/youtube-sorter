// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package logger

import (
	"fmt"
	"strings"
)

const (
	// LevelInfo is a Level of type Info.
	LevelInfo Level = iota
	// LevelPanic is a Level of type Panic.
	LevelPanic
	// LevelFatal is a Level of type Fatal.
	LevelFatal
	// LevelError is a Level of type Error.
	LevelError
	// LevelWarning is a Level of type Warning.
	LevelWarning
	// LevelDebug is a Level of type Debug.
	LevelDebug
	// LevelTrace is a Level of type Trace.
	LevelTrace
)

const _LevelName = "infopanicfatalerrorwarningdebugtrace"

var _LevelNames = []string{
	_LevelName[0:4],
	_LevelName[4:9],
	_LevelName[9:14],
	_LevelName[14:19],
	_LevelName[19:26],
	_LevelName[26:31],
	_LevelName[31:36],
}

// LevelNames returns a list of possible string values of Level.
func LevelNames() []string {
	tmp := make([]string, len(_LevelNames))
	copy(tmp, _LevelNames)
	return tmp
}

var _LevelMap = map[Level]string{
	LevelInfo:    _LevelName[0:4],
	LevelPanic:   _LevelName[4:9],
	LevelFatal:   _LevelName[9:14],
	LevelError:   _LevelName[14:19],
	LevelWarning: _LevelName[19:26],
	LevelDebug:   _LevelName[26:31],
	LevelTrace:   _LevelName[31:36],
}

// String implements the Stringer interface.
func (x Level) String() string {
	if str, ok := _LevelMap[x]; ok {
		return str
	}
	return fmt.Sprintf("Level(%d)", x)
}

var _LevelValue = map[string]Level{
	_LevelName[0:4]:   LevelInfo,
	_LevelName[4:9]:   LevelPanic,
	_LevelName[9:14]:  LevelFatal,
	_LevelName[14:19]: LevelError,
	_LevelName[19:26]: LevelWarning,
	_LevelName[26:31]: LevelDebug,
	_LevelName[31:36]: LevelTrace,
}

// ParseLevel attempts to convert a string to a Level.
func ParseLevel(name string) (Level, error) {
	if x, ok := _LevelValue[name]; ok {
		return x, nil
	}
	return Level(0), fmt.Errorf("%s is not a valid Level, try [%s]", name, strings.Join(_LevelNames, ", "))
}

// Set implements the Golang flag.Value interface func.
func (x *Level) Set(val string) error {
	v, err := ParseLevel(val)
	*x = v
	return err
}

// Get implements the Golang flag.Getter interface func.
func (x *Level) Get() interface{} {
	return *x
}

// Type implements the github.com/spf13/pFlag Value interface.
func (x *Level) Type() string {
	return "Level"
}
